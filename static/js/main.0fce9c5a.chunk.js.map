{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","mode","count","this","timerID","setInterval","tick","clearInterval","setState","interval","console","log","className","onClick","changeMode","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA0EeA,E,kDAtEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,KAAK,EAAGC,MAAM,GAFX,E,qDAKnB,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,O,kCAIJ,WACEC,cAAcJ,KAAKC,W,wBAGrB,SAAWH,GAAO,IAAD,OAOf,GANAM,cAAcJ,KAAKC,SAEnBD,KAAKK,SAAS,CACZP,SAGW,IAATA,EAAY,CACd,IAAMQ,EAAW,IAAOR,EAExBE,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACXG,M,kBAKN,WACEC,QAAQC,IAAI,QACZR,KAAKK,SAAS,CACZN,OAAQC,KAAKH,MAAME,MAAQ,GAAK,M,oBAMpC,WAAU,IAAD,OACP,OACE,sBAAKU,UAAU,MAAf,UACE,gCACE,wBAAQC,QAAS,kBAAM,EAAKC,WAAW,IAAIF,UAA+B,IAApBT,KAAKH,MAAMC,KAAa,MAAQ,GAAtF,gBACA,wBAAQY,QAAS,kBAAM,EAAKC,WAAW,IAAIF,UAA+B,IAApBT,KAAKH,MAAMC,KAAa,MAAQ,GAAtF,kBACA,wBAAQY,QAAS,kBAAM,EAAKC,WAAW,IAAIF,UAA+B,IAApBT,KAAKH,MAAMC,KAAa,MAAQ,GAAtF,mBACA,wBAAQY,QAAS,kBAAM,EAAKC,WAAW,IAAIF,UAA+B,IAApBT,KAAKH,MAAMC,KAAa,MAAQ,GAAtF,qBAEF,sBAAKW,UAAU,cAAf,UACE,qBAAKA,UAAgC,IAArBT,KAAKH,MAAME,MAAc,YAAc,OAAvD,gBAGA,qBAAKU,UAAgC,IAArBT,KAAKH,MAAME,MAAc,YAAc,OAAvD,kBAGA,qBAAKU,UAAgC,IAArBT,KAAKH,MAAME,MAAc,YAAc,OAAvD,kBAGA,qBAAKU,UAAgC,IAArBT,KAAKH,MAAME,MAAc,YAAc,OAAvD,0B,GA9DQa,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0fce9c5a.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {mode:1, count:1};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  changeMode(mode) {\n    clearInterval(this.timerID);\n\n    this.setState({\n      mode\n    })\n\n    if (mode !== 0) {\n      const interval = 1000 / mode;\n\n      this.timerID = setInterval(\n        () => this.tick(),\n        interval\n      );\n    }\n  }\n\n  tick() {\n    console.log(\"tick\");\n    this.setState({\n      count: (this.state.count + 1) % 4\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <button onClick={() => this.changeMode(1)} className={this.state.mode === 1 ? \"sel\" : \"\"}>1s</button>\n          <button onClick={() => this.changeMode(2)} className={this.state.mode === 2 ? \"sel\" : \"\"}>0.5s</button>\n          <button onClick={() => this.changeMode(4)} className={this.state.mode === 4 ? \"sel\" : \"\"}>0.25s</button>\n          <button onClick={() => this.changeMode(0)} className={this.state.mode === 0 ? \"sel\" : \"\"}>Stop</button>\n        </div>\n        <div className=\"textWrapper\">\n          <div className={this.state.count === 0 ? \"text show\" : \"text\"}>\n            Ta\n          </div>\n          <div className={this.state.count === 1 ? \"text show\" : \"text\"}>\n            Dhin\n          </div>\n          <div className={this.state.count === 2 ? \"text show\" : \"text\"}>\n            Dhin\n          </div>\n          <div className={this.state.count === 3 ? \"text show\" : \"text\"}>\n            Da\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}